body {
    pointer-events: none;
    /* If unfamiliar with svw/svh, see: https://developer.mozilla.org/en-US/docs/Web/CSS/length#small */
    width: 100svw; /* "small" view width and height safely work with the iPhone floating url bar (sadly vw/vh don't) */
    height: 100svh;
    overflow: hidden;
    -webkit-user-select: none;
    touch-action: none;
    -webkit-touch-callout: none;
}

body > * {
    pointer-events: auto;
    /* overflow:hidden is necessary to prevent unintentional native scrolling/zooming within iOS safari app */
    /* but we should limit its scope as much as possible instead of adding it here */
}

/* necessary to prevent native scrolling/zooming within iOS safari app */
.canvas-node-connections {
    overflow: hidden;
}

/* necessary to prevent native scrolling/zooming within iOS safari app */
.canvas-main-threejs {
    overflow: hidden;
}

#UIButtons > * {
    cursor: pointer;
}

.hiddenDesktopButton {
    display: none; /* totally hide this button on desktop because it doesn't do anything */
}

#canvas {
    background-color: transparent;
    transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0.1, 1);
    pointer-events: auto;
}

#interactionCursor {
    pointer-events: none;
    position: absolute;
    width: 30px;
    height: 30px;
    /*border: 3px solid cyan;*/
    display: none;
}

#staticInteractionCursor {
    pointer-events: none;
    position: absolute;
    width: 30px;
    height: 30px;
    display: none;
    opacity: 0.3;
}

#mainThreejsCanvas {
    pointer-events: auto !important;
}

.blockIconTinted {
    background-color: rgba(100,255,255,0.25) !important; /*on remote operator, override background to have more contrast*/
}

.desktopMenuBar {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 30px;
    background-color: rgba(0,0,0, 0.9);
    color: lightgray;
    transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 3000, 1);
    z-index: 3000;
}

.desktopMenuBarMenu {
    position: absolute;
    top: 0;
    left: 0;
    width: 100px;
}

.desktopMenuBarMenuTitle {
    height: 30px;
    text-align: left;
    line-height: 30px;
    padding-left: 10px;
    cursor: pointer;
    border-radius: 5px;
}

.desktopMenuBarMenuTitle:hover {
    background-color: rgba(255,255,255, 0.1);
}

.desktopMenuBarMenuTitleOpen {
    background-color: rgba(255,255,255, 0.2) !important;
}

.desktopMenuBarMenuTitleDisabled {
    color: rgb(75, 75, 75);
    pointer-events: none;
}

.desktopMenuBarMenuDropdown {
    /* TODO: how to best adapt width of menubar to comfortably fit contents? (not an issue now, but may want to) */
    width: 250px;
    background-color: rgba(0,0,0, 0.9);
    border-radius: 5px;
    /*overflow: hidden;*/
}

.desktopMenuBarLight {
    background-color: rgba(64,170,29,0.9);
}

.hiddenDropdown {
    display: none;
}

.desktopMenuBarItem {
    width: calc(100% - 10px);
    padding-left: 10px;
    height: 30px;
    cursor: pointer;
    line-height: 30px;
}

.desktopMenuBarItem:hover {
    background-color: rgba(55, 55, 55, 0.9);
}

.desktopMenuBarItemTextToggle {
    padding-left: 20px;
}

.desktopMenuBarItemSeparator {
    pointer-events: none;
    cursor: unset;
    height: 8px;
    padding: 0;
}

.desktopMenuBarItemDisabled {
    cursor: not-allowed;
    color: gray;
}

.desktopMenuBarItemCheckmark {
    position: absolute;
    left: 10px;
    top: 0;
}

.desktopMenuBarItemCheckmarkHidden {
    visibility: hidden;
}

.desktopMenuBarItemCheckmarkDisabled {
    opacity: 0.5;
}

.desktopMenuBarItemArrow {
    position: absolute;
    right: 15px;
    top: 0;
    width: 30px;
    text-align: center;
}

.desktopMenuBarSubmenu {
    left: 100%;
    width: 250px;
    background-color: rgba(0, 0, 0, 0.9);
}

.desktopMenuBarItemShortcut {
    position: absolute;
    right: 15px;
    top: 0;
    width: 30px;
    text-align: center;
    color: rgb(155, 155, 155);
}

.desktopMenuBarItemShortcutModifier {
    position: absolute;
    right: 45px;
    top: 0;
    text-align: right;
    color: rgb(155, 155, 155);
}

.mode-prompt-container {
    position: absolute;
    right: 0;
    bottom: 20px;
    width: 320px;
    height: max-content;
    margin-right: 20px;
    pointer-events: none;
}

.mode-prompt {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    width: 320px;
    height: max-content;
    background: rgba(0, 0, 0, 0.5);
    border-radius: 5px;
    margin-top: 10px;
    font-size: 1em;
    pointer-events: none;
    padding: 16px;
    opacity: 0;
    box-sizing: border-box;
    animation: 5s ease-in forwards promptFadeIn;
}

.mode-prompt.remove-prompt {
    animation: promptFadeOut ease-in .3s forwards;
}

.mode-prompt ul {
    padding-inline-start: 20px;
}

.mode-prompt-big-font {
    font-size: 1.1em;
    font-weight: 600;
}

@keyframes promptFadeIn {
    0% { opacity: 0 }
    20% { opacity: 1 }
    80% { opacity: 1 }
    100% { opacity: 0 }
}

#avatar-follow-border {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border: 8px solid white; /* change the color with JS */
    pointer-events: none;
    z-index: 9999; /* go on top of EVERYTHING */
}

#avatar-follow-border > .fullscreenSubtitle {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    text-align: center;
    bottom: 50px;
    background-color: rgba(0,0,0,0.5);
    padding: 8px 16px;
    border-radius: 15px;
}

#touchControlsContainer {
    position: absolute;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
    transform: translateZ(1000px);
}

.touchControlButtonContainer {
    width: 44px;
    height: 44px;
    border-radius: 5px;
    background-color: rgba(0, 0, 0, 0.7);
    margin-bottom: 10px;
    &.selected {
        background-color: rgba(150, 150, 150, 0.9);
    }
}

.touchControlButtonIcon {
    width: 100%;
    height: 100%;
    cursor: pointer;
}

.camera-position-memory-bar-parent {
    width: 100%;
    display: flex;
    justify-content: center;
    position: absolute;
    left: 0;
    top: 150px;
}

.camera-position-memory-bar {
    background-color: rgba(0,0,0,0.25);
    border-radius: 10px;
    padding: 5px;
}

.camera-position-memory-slot {
    width: 100px;
    height: 80px;
    border: 2px solid white;
    background-color: rgba(0,0,0,0.5);
    border-radius: 10px;
    display: inline-block;
    margin: 10px;
    cursor: pointer;
    overflow: hidden;
    &:hover {
        background-color: rgba(155,155,155,0.5);
    }
}

.camera-position-memory-slot-image {
    width: 100%;
    height: 100%;
    background-position: center;
    background-repeat: no-repeat;
    /* In JS, you can override this from cover to 50% depending on which image is shown */
    background-size: cover; /* Make sure it fills the container with no stretching */
}

.camera-position-memory-slot-x {
    position: absolute;
    top: 0;
    right: 0;
    width: 20px;
    height: 20px;
    border-bottom-left-radius: 5px;
    background-color: rgb(56, 56, 56);
    color: white;
    text-align: center;
    line-height: 20px;
    font-size: 12px;
    cursor: pointer;
    z-index: 1; /* Ensure it is on top of other elements */
    display: flex;
    align-items: center;
    justify-content: center;
    &:hover {
        background-color: red;
    }
}

.hidden-memory-bar {
    display: none;
}
